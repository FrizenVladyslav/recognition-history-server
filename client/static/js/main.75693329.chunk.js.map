{"version":3,"sources":["containers/Histories/History/styles.module.scss","components/History/styles.module.scss","containers/NewHistory/UploadImage/styles.module.scss","containers/App/styles.module.scss","components/Header/styles.module.scss","containers/NewHistory/styles.module.scss","components/Footer/index.tsx","components/Header/index.tsx","components/Input/index.tsx","utils/history.ts","config.ts","actions/history.ts","containers/Histories/History/index.tsx","containers/Histories/index.tsx","components/History/index.tsx","containers/History/index.tsx","actions/files.ts","components/PrivateRoute/index.tsx","utils/validate.ts","containers/NewHistory/CreateHistory/index.tsx","containers/NewHistory/UploadImage/index.tsx","containers/NewHistory/index.tsx","serviceWorker.ts","index.tsx","containers/App/index.tsx","containers/Histories/styles.module.scss"],"names":["module","exports","Footer","Header","className","styles","header","to","type","icon","Input","error","label","rest","Item","validateStatus","help","createBrowserHistory","host","process","commonConfigs","api","axios","create","baseURL","imagga","auth","username","password","endpoint","getHistory","id","a","res","status","Error","data","getHistories","get","addHistory","history","post","getTagColor","percent","History","card","cover","alt","src","img","Meta","meta","title","moment","date","format","description","tags","map","en","tag","confidence","key","color","Histories","state","loading","histories","search","loadHistories","hideMessage","message","notification","setState","filterHistories","filter","some","indexOf","toLowerCase","this","classNames","input","placeholder","prefix","onChange","e","target","value","list","length","Component","gutter","justify","sm","image","spinning","Group","btnGroup","href","HistoryPage","props","match","params","useState","setHistory","useEffect","replace","uploadImage","file","FormData","append","method","url","headers","getInfo","result","PrivateRoute","allow","redirectTo","antMessage","warning","isImage","CreateHistory","decodeURIComponent","setLoading","setTags","UploadImage","imgUrl","onUpload","onSubmit","form","name","Dragger","accept","uploader","listType","fileList","disabled","shape","size","onClick","path","undefined","changeField","handleSubmit","preventDefault","push","encodeURIComponent","originFileObj","newState","filesActions","imageName","fileName","current","step","steps","Step","component","render","String","location","pathname","Boolean","window","hostname","ReactDOM","layout","Content","content","NewHistory","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75693329.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__yNviF\",\"meta\":\"styles_meta__XhGRL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"styles_image__1XDPv\",\"btnGroup\":\"styles_btnGroup__37C5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__3QiYF\",\"uploader\":\"styles_uploader__3HsLh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"styles_layout__SeFd3\",\"content\":\"styles_content__o67Yr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2dQfB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"steps\":\"styles_steps__3fuSV\"};","import React from 'react'\nimport { Layout } from 'antd'\n\nconst Footer: React.FC = () => <Layout.Footer>Recognition history</Layout.Footer>\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Layout, Icon, Button } from 'antd'\n\nimport styles from './styles.module.scss'\n\nconst Header: React.FC = () => {\n  return (\n    <Layout.Header className={styles.header}>\n      <Link to=\"/\">\n        <Icon type=\"file-image\" /> Images recognition history\n      </Link>\n      <Link to=\"/new-history\">\n        <Button type=\"primary\" icon=\"info-circle\">\n          Get image info\n        </Button>\n      </Link>\n    </Layout.Header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Form, Input as AntInput } from 'antd'\nimport { InputProps } from 'antd/lib/input'\n\ninterface IProps extends InputProps {\n  error?: boolean | string\n  label?: React.ReactNode\n}\n\nconst Input: React.FC<IProps> = ({ error, label, ...rest }) => {\n  return (\n    <Form.Item label={label} validateStatus={!!error ? 'error' : ''} help={error}>\n      <AntInput {...rest} />\n    </Form.Item>\n  )\n}\n\nexport default Input\n","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory()\n","import axios from 'axios'\n\nexport const host = process.env.REACT_APP_HOST\n\nconst commonConfigs = {\n  validateStatus: () => true,\n}\n\nexport const api = axios.create({\n  ...commonConfigs,\n  baseURL: host,\n})\n\nexport const imagga = axios.create({\n  ...commonConfigs,\n  baseURL: 'https://api.imagga.com/v2/',\n  auth: {\n    username: 'acc_49ca02957a3cdc5',\n    password: 'b7ab9efa1575c13b0448972fc4e12a8d',\n  },\n})\n","import { api } from 'config'\nimport { IHistory } from 'models'\n\nconst endpoint = 'histories'\n\nexport async function getHistory(id: number): Promise<IHistory> {\n  const res = await api(`${endpoint}/${id}`)\n  if (res.status !== 200) throw new Error('Hostory not recieved')\n  return res.data\n}\n\nexport async function getHistories(): Promise<IHistory[]> {\n  const res = await api.get(`${endpoint}?sort=date,DESC`)\n  if (res.status !== 200) throw new Error('Histories not recieved')\n  return res.data\n}\n\nexport async function addHistory(history: Partial<IHistory>): Promise<void> {\n  const res = await api.post(endpoint, history)\n  if (res.status !== 201) throw new Error('History not created')\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\nimport { Card, Tag } from 'antd'\nimport { IHistory } from 'models'\n\nimport styles from './styles.module.scss'\n\nfunction getTagColor(percent: number) {\n  switch (true) {\n    case percent > 89:\n      return 'green'\n    case percent > 49:\n      return 'cyan'\n    default:\n      return 'red'\n  }\n}\n\nconst History: React.FC<{ history: IHistory }> = ({ history }) => {\n  return (\n    <Link to={`/${history.id}`}>\n      <Card className={styles.card} cover={<img alt=\"example\" src={history.img} />}>\n        <Card.Meta\n          className={styles.meta}\n          title={moment(history.date).format('MMMM Do YYYY, h:mm:ss a')}\n          description={history.tags.map(({ tag: { en }, confidence }) => (\n            <Tag key={en} color={getTagColor(confidence)}>\n              {en}\n            </Tag>\n          ))}\n        />\n      </Card>\n    </Link>\n  )\n}\n\nexport default History\n","import React, { Component } from 'react'\nimport { notification, Empty, message, Icon } from 'antd'\nimport classNames from 'classnames'\nimport { getHistories } from 'actions/history'\nimport { Input } from 'components'\nimport { IHistory } from 'models'\nimport History from './History'\n\nimport styles from './styles.module.scss'\n\ninterface IState {\n  loading: boolean\n  histories: IHistory[]\n  search: string\n}\n\nclass Histories extends Component<{}, IState> {\n  state: IState = {\n    loading: true,\n    histories: [],\n    search: '',\n  }\n\n  componentDidMount() {\n    this.loadHistories()\n  }\n\n  loadHistories = async () => {\n    const hideMessage = message.loading('Loading histories list...')\n    let histories: IHistory[] = []\n\n    try {\n      histories = await getHistories()\n    } catch (e) {\n      notification.error({ message: e.message || e })\n    } finally {\n      this.setState({ loading: false, histories }, hideMessage)\n    }\n  }\n\n  filterHistories = () => {\n    const { search, histories } = this.state\n    if (search === '') return histories\n\n    return histories.filter(({ tags }) => {\n      return tags.some(({ tag: { en } }) => en.indexOf(search.toLowerCase()) !== -1)\n    })\n  }\n\n  render() {\n    const { loading } = this.state\n    const histories = this.filterHistories()\n\n    return (\n      <section className={classNames('container', styles.histories)}>\n        <Input\n          className={styles.input}\n          placeholder=\"search by tag\"\n          prefix={<Icon type=\"search\" />}\n          onChange={e => this.setState({ search: e.target.value })}\n        />\n        <div className={styles.list}>\n          {!!histories.length\n            ? histories.map(history => <History key={history.id} history={history} />)\n            : !loading && <Empty />}\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default Histories\n","import React from 'react'\nimport { Col, Row, Progress, Spin, Button, Icon } from 'antd'\nimport { IHistory } from 'models'\n\nimport styles from './styles.module.scss'\n\ninterface IProps extends Pick<IHistory, 'img' | 'tags'> {\n  loading?: boolean\n}\n\nconst History: React.FC<IProps> = ({ img, tags, loading }) => {\n  return (\n    <section>\n      <Row gutter={30} type=\"flex\" justify=\"center\">\n        <Col sm={8} className={styles.image}>\n          <img src={img} alt=\"history\" />\n        </Col>\n        <Col sm={7}>\n          <Spin spinning={loading === true}>\n            {tags.map(({ confidence, tag: { en } }) => (\n              <Progress key={en} percent={confidence} format={() => en} />\n            ))}\n          </Spin>\n        </Col>\n      </Row>\n      <Button.Group className={styles.btnGroup}>\n        <Button type=\"link\" href=\"/\">\n          <Icon type=\"left\" />\n          Back to histories list\n        </Button>\n        <Button type=\"link\" href=\"/new-history\">\n          Get image info\n          <Icon type=\"plus\" />\n        </Button>\n      </Button.Group>\n    </section>\n  )\n}\n\nexport default History\n","import React, { useEffect, useState } from 'react'\nimport { RouteComponentProps } from 'react-router'\nimport { message, Spin, notification } from 'antd'\nimport { getHistory } from 'actions/history'\nimport History from 'components/History'\nimport { IHistory } from 'models'\n\nconst HistoryPage: React.FC<RouteComponentProps<{ id: string }>> = props => {\n  const { id } = props.match.params\n  const [history, setHistory] = useState<IHistory | null>(null)\n\n  useEffect(() => {\n    const hideMessage = message.loading('Loading...')\n    ;(async () => {\n      try {\n        const history = await getHistory(+id)\n        setHistory(history)\n      } catch (e) {\n        notification.error({ message: e.message || e })\n        props.history.replace('/')\n      } finally {\n        hideMessage()\n      }\n    })()\n  }, [props.history, id])\n\n  return (\n    <Spin spinning={!history}>{history && <History img={history.img} tags={history.tags} />}</Spin>\n  )\n}\n\nexport default HistoryPage\n","import axios from 'axios'\nimport { imagga, host } from 'config'\nimport { ITag } from 'models'\n\nconst endpoint = 'files/'\n\nexport function getImage(fileName: string): string {\n  return `${host}${endpoint}${fileName}`\n}\n\nexport async function uploadImage(file: File | Blob): Promise<string> {\n  const data = new FormData()\n  data.append('image', file)\n\n  const res = await axios({\n    method: 'post',\n    url: `${host}${endpoint}`,\n    data,\n    headers: { 'content-type': `multipart/form-data;` },\n    validateStatus: () => true,\n  })\n  if (res.status !== 201) throw new Error('Image not uploaded')\n  return res.data\n}\n\nexport async function getInfo(url: string): Promise<ITag[]> {\n  const res = await imagga.get('/tags', {\n    params: {\n      [`image_url`]: url,\n      limit: 5,\n    },\n  })\n  if (res.status !== 200) throw new Error('Image information not received')\n  return res.data.result.tags\n}\n","import React from 'react'\nimport { Route, Redirect, RouteProps } from 'react-router'\nimport { message as antMessage } from 'antd'\n\ninterface IProps extends RouteProps {\n  allow: boolean\n  message?: string\n  redirectTo?: string | object\n}\n\nconst PrivateRoute: React.FC<IProps> = ({ allow, message, redirectTo, ...rest }) => {\n  if (!allow) antMessage.warning(message ? message : `You have not access to this page`)\n\n  return allow ? <Route {...rest} /> : <Redirect to={redirectTo ? redirectTo : '/'} />\n}\n\nexport default PrivateRoute\n","export function isImage(url: string) {\n  return url.match(/(?=.*(jpeg|jpg|svg|png))/) !== null\n}\n","import React, { useEffect, useState } from 'react'\nimport { RouteComponentProps } from 'react-router'\nimport { message, notification } from 'antd'\nimport { addHistory } from 'actions/history'\nimport { getInfo } from 'actions/files'\nimport History from 'components/History'\nimport { ITag } from 'models'\n\nconst CreateHistory: React.FC<RouteComponentProps<{ img: string }>> = props => {\n  const img = decodeURIComponent(props.match.params.img)\n  const [loading, setLoading] = useState(true)\n  const [tags, setTags] = useState<ITag[]>([])\n\n  useEffect(() => {\n    ;(async () => {\n      const hideMessage = message.loading('Loading image tags...')\n\n      try {\n        const tags = await getInfo(img)\n        setTags(tags)\n        await addHistory({ img, tags })\n      } catch (e) {\n        notification.error({ message: e.message || e })\n        props.history.replace('/new-history')\n      } finally {\n        hideMessage()\n        setLoading(false)\n      }\n    })()\n  }, [img, props.history])\n\n  return (\n    <section>\n      <History img={img} tags={tags} loading={loading} />\n    </section>\n  )\n}\n\nexport default CreateHistory\n","import React from 'react'\nimport { Upload, Icon, Divider, Form, Button } from 'antd'\nimport { UploadFile, UploadChangeParam } from 'antd/lib/upload/interface'\nimport Input from 'components/Input'\nimport { IState as RootState } from '../'\n\nimport styles from './styles.module.scss'\n\ninterface IProps extends Pick<RootState, 'imgUrl' | 'error'> {\n  file?: UploadFile\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  onSubmit: (\n    e: React.FormEvent<HTMLFormElement> | React.MouseEvent<HTMLElement, MouseEvent>\n  ) => void\n  onUpload: (info: UploadChangeParam<UploadFile>) => void\n}\n\nconst UploadImage: React.FC<IProps> = ({ file, imgUrl, error, onUpload, onSubmit, onChange }) => {\n  return (\n    <Form className={styles.form} onSubmit={onSubmit}>\n      <h2>Upload your image</h2>\n      <p>You can upload a image or paste a URL of an image</p>\n      <Input\n        label=\"Image URL\"\n        name=\"imgUrl\"\n        placeholder=\"Enter Image URL\"\n        error={error}\n        value={imgUrl}\n        onChange={onChange}\n      />\n      <Divider />\n      <Upload.Dragger\n        accept=\".jpg, .jpeg, .png, .svg\"\n        className={styles.uploader}\n        name=\"image\"\n        onChange={onUpload}\n        listType=\"picture\"\n        fileList={!!file ? [file] : []}\n      >\n        <p className=\"ant-upload-drag-icon\">\n          <Icon type=\"file-image\" />\n        </p>\n        <p className=\"ant-upload-text\">Click or drag image to this area to upload</p>\n      </Upload.Dragger>\n      <Button disabled={!imgUrl} type=\"primary\" shape=\"round\" size=\"large\" onClick={onSubmit}>\n        Next\n      </Button>\n    </Form>\n  )\n}\n\nexport default UploadImage\n","import React, { Component } from 'react'\nimport { Route, Switch, RouteComponentProps } from 'react-router'\nimport { Steps, message, notification } from 'antd'\nimport { UploadFile, UploadChangeParam } from 'antd/lib/upload/interface'\nimport * as filesActions from 'actions/files'\nimport PrivateRoute from 'components/PrivateRoute'\nimport { isImage } from 'utils/validate'\nimport CreateHistory from './CreateHistory'\nimport UploadImage from './UploadImage'\n\nimport styles from './styles.module.scss'\n\nexport interface IState {\n  allow: boolean\n  loading: boolean\n  error: string\n  imgUrl?: string\n  file?: UploadFile\n}\n\nconst path = '/new-history'\n\nclass History extends Component<RouteComponentProps<{ img?: string }>, IState> {\n  state: IState = {\n    allow: false,\n    loading: false,\n    error: '',\n    imgUrl: undefined,\n  }\n\n  get allow() {\n    return this.state.allow || isImage(String(this.props.match.params.img))\n  }\n\n  get step() {\n    return this.props.location.pathname === path ? 0 : 1\n  }\n\n  changeField = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    this.setState<never>({ [name]: value, error: '' })\n  }\n\n  handleSubmit = (\n    e: React.FormEvent<HTMLFormElement> | React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    e.preventDefault()\n    const { imgUrl } = this.state\n    if (!imgUrl || !isImage(imgUrl)) return this.setState({ error: 'No valid image URL' })\n\n    this.setState({ allow: true }, () =>\n      this.props.history.push(`${path}/${encodeURIComponent(imgUrl)}`)\n    )\n  }\n\n  uploadImage = async ({ file }: UploadChangeParam<UploadFile>) => {\n    if (file.status === 'removed') return this.setState({ imgUrl: undefined, file: undefined })\n    if (!file.originFileObj) return\n\n    this.setState({ loading: true })\n    const { loading, imgUrl } = this.state\n    const hideMessage = !loading && message.loading('Image uploading...')\n    const newState = { loading: false, imgUrl, file }\n\n    try {\n      const imageName = await filesActions.uploadImage(file.originFileObj)\n      newState.imgUrl = await filesActions.getImage(imageName)\n    } catch (e) {\n      notification.error({ message: e.message || e })\n    } finally {\n      this.setState(newState, () => !!hideMessage && hideMessage())\n    }\n  }\n\n  render(): JSX.Element {\n    const { imgUrl, error, file } = this.state\n\n    return (\n      <section className=\"container\">\n        <Steps current={this.step} className={styles.steps}>\n          <Steps.Step title=\"Upload\" description=\"Select a image.\" />\n          <Steps.Step title=\"Tags\" description=\"View information.\" />\n        </Steps>\n        <Switch>\n          <PrivateRoute\n            allow={this.allow}\n            message=\"Please upload image\"\n            path={`${path}/:img`}\n            redirectTo={path}\n            component={CreateHistory}\n          />\n          <Route\n            path={path}\n            render={() => (\n              <UploadImage\n                imgUrl={imgUrl}\n                error={error}\n                onChange={this.changeField}\n                onSubmit={this.handleSubmit}\n                onUpload={this.uploadImage}\n                file={file}\n              />\n            )}\n          />\n        </Switch>\n      </section>\n    )\n  }\n}\n\nexport default History\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './containers/App'\nimport * as serviceWorker from './serviceWorker'\n\n// normalize and basic styles for application\nimport 'normalize.css'\nimport 'antd/dist/antd.css'\nimport 'sources/styles/styles.scss'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\nimport { Switch, Route, Router } from 'react-router'\nimport { Layout } from 'antd'\nimport { Header, Footer } from 'components'\nimport history from 'utils/history'\nimport Histories from '../Histories'\nimport History from '../History'\nimport NewHistory from '../NewHistory'\n\nimport styles from './styles.module.scss'\n\nexport default function Public(): React.ReactElement {\n  return (\n    <Router history={history}>\n      <Layout className={styles.layout}>\n        <Header />\n        <Layout.Content className={styles.content}>\n          <Switch>\n            <Route path=\"/new-history/:img?\" component={NewHistory} />\n            <Route path=\"/:id\" component={History} />\n            <Route path=\"/\" component={Histories} />\n          </Switch>\n        </Layout.Content>\n        <Footer />\n      </Layout>\n    </Router>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"histories\":\"styles_histories__38wti\",\"input\":\"styles_input__PK6Bt\",\"list\":\"styles_list__2JcD-\"};"],"sourceRoot":""}